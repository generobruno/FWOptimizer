name: Python CI

on:
  push:
    branches:
      - ci_workflow

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip # For Linux
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements/*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install pip-tools
      run: |
        python -m pip install --upgrade pip
        pip install pip-tools

    - name: Check if pyproject.toml is modified
      id: check_pyproject
      run: |
        if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q 'pyproject.toml'; then
          echo "PYPROJECT_CHANGED=true" >> $GITHUB_ENV
        else
          echo "PYPROJECT_CHANGED=false" >> $GITHUB_ENV
        fi
  
    - name: Generate default_reqs.txt from pyproject.toml
      if: env.PYPROJECT_CHANGED == 'true'
      run: |
        mkdir -p requirements
        pip-compile --extra=test --output-file=requirements/default_reqs.txt --generate-hashes pyproject.toml

    - name: Install dependencies
      run: |
        pip install -r requirements/default_reqs.txt

    - name: Lint with PyLint
      run: | # || true to continue on error
        pylint $(git ls-files '*.py') --output-format=json > .github/pylint_out.json || true 
        python .github/annotate_pylint.py

    - name: Run tests
      env:
        PYTHONPATH: ${{ github.workspace }}
      run: |
        pytest --disable-warnings --junitxml=.github/pytest_out.xml
        python .github/annotate_pytest.py